{"ast":null,"code":"var _jsxFileName = \"/Users/pedber/Documents/Bergamo Creations/bergamo-creations/src/pages/MusicPage.js\";\nimport React from 'react';\nimport MusicList from \"./content/MusicList.json\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./pages.css\";\nimport { Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPage = props => {\n  const ValidId = parseInt(props.match.params.id);\n  if (!ValidId) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/404\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  const fetchedSong = {};\n  MusicList.forEach((item, i) => {\n    if (ValidId === item.id) {\n      fetchedSong.title = item.title ? item.title : \"No title given\";\n      fetchedSong.englishtitle = item.englishtitle ? item.englishtitle : \"No title given\";\n      fetchedSong.lyrics = item.lyrics ? item.lyrics : \"No lyrics available\";\n      fetchedSong.translation = item.translation ? item.translation : \"No translation available\";\n      fetchedSong.video = item.video ? item.video : \"No video given\";\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp : \"No content given\";\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"song\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: 8,\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: fetchedSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), fetchedSong.lyrics.map((verse, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lyrics\",\n          children: verse\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: 8,\n      md: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: fetchedSong.englishtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), fetchedSong.translation.map((verse, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lyrics\",\n          children: verse\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Composer: Pedro Bergamo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\xA9 Aracn\\xEDdea Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"bandcamp\",\n      title: fetchedSong.title,\n      src: `https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`,\n      seamless: true,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`,\n        children: fetchedSong.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      className: \"video\",\n      src: fetchedSong.video,\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: \"allowfullscreen\",\n      mozallowfullscreen: \"mozallowfullscreen\",\n      msallowfullscreen: \"msallowfullscreen\",\n      oallowfullscreen: \"oallowfullscreen\",\n      webkitallowfullscreen: \"webkitallowfullscreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this)]\n  }, fetchedSong.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 11\n  }, this);\n};\n_c = MusicPage;\nexport default MusicPage;\nvar _c;\n$RefreshReg$(_c, \"MusicPage\");","map":{"version":3,"names":["React","MusicList","Redirect","Col","MusicPage","props","ValidId","parseInt","match","params","id","fetchedSong","forEach","item","i","title","englishtitle","lyrics","translation","video","bandcamp","map","verse"],"sources":["/Users/pedber/Documents/Bergamo Creations/bergamo-creations/src/pages/MusicPage.js"],"sourcesContent":["import React from 'react';\nimport MusicList from \"./content/MusicList.json\"\nimport {Redirect} from \"react-router-dom\"\nimport \"./pages.css\"\nimport {Col} from \"react-bootstrap\"\n\nconst MusicPage = (props) => {\n  const ValidId = parseInt(props.match.params.id)\n  if(!ValidId){\n    return <Redirect to=\"/404\" />\n  }\n  const fetchedSong = {}\n  MusicList.forEach((item, i) => {\n    if(ValidId === item.id){\n      fetchedSong.title = item.title ? item.title: \"No title given\"\n      fetchedSong.englishtitle = item.englishtitle ? item.englishtitle: \"No title given\"\n      fetchedSong.lyrics = item.lyrics ? item.lyrics: \"No lyrics available\"\n      fetchedSong.translation = item.translation ? item.translation: \"No translation available\"\n      fetchedSong.video = item.video ? item.video: \"No video given\"\n      fetchedSong.bandcamp = item.bandcamp ? item.bandcamp: \"No content given\"\n    }\n  });\n\n  return(\n          <div key={fetchedSong.id} className=\"song\">\n          <Col xs={8} md={6}>\n          <h3>{fetchedSong.title}</h3>\n          {fetchedSong.lyrics.map((verse, i) => {\n            return <p key={i} className=\"lyrics\">{verse}</p>\n          })}\n          </Col>\n          <Col xs={8} md={6}>\n          <h3>{fetchedSong.englishtitle}</h3>\n          {fetchedSong.translation.map((verse, i) => {\n            return <p key={i} className=\"lyrics\">{verse}</p>\n          })}\n          </Col>\n            <p>&nbsp;</p>\n            <p>Composer: Pedro Bergamo</p>\n            <p>© Aracnídea Records</p>\n            <iframe className=\"bandcamp\" title={fetchedSong.title}\n                src={`https://bandcamp.com/EmbeddedPlayer/track=${fetchedSong.bandcamp}/size=small/bgcol=000000/linkcol=999999/tracklist=false/transparent=true/`} seamless>\n              <a href={`https://pedrobergamo.bandcamp.com/track/${fetchedSong.title}`}>{fetchedSong.title}</a>\n            </iframe>\n              <iframe className=\"video\"\n              src={fetchedSong.video} title=\"YouTube video player\"\n              frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n              encrypted-media; gyroscope; picture-in-picture\"\n              allowFullScreen=\"allowfullscreen\"\n              mozallowfullscreen=\"mozallowfullscreen\"\n              msallowfullscreen=\"msallowfullscreen\"\n              oallowfullscreen=\"oallowfullscreen\"\n              webkitallowfullscreen=\"webkitallowfullscreen\">\n               </iframe>\n          </div>\n    );\n};\n\nexport default MusicPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}